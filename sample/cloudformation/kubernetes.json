{
  "Resources": {
    "AWSAutoScalingAutoScalingGroupmastereuwest2amastersdev1k8slocal": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "AutoScalingGroupName": "master-eu-west-2a.masters.dev1.k8s.local",
        "LaunchConfigurationName": {
          "Ref": "AWSAutoScalingLaunchConfigurationmastereuwest2amastersdev1k8slocal"
        },
        "MaxSize": 1,
        "MinSize": 1,
        "VPCZoneIdentifier": [
          {
            "Ref": "AWSEC2Subneteuwest2adev1k8slocal"
          }
        ],
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "dev1.k8s.local",
            "PropagateAtLaunch": true
          },
          {
            "Key": "Name",
            "Value": "master-eu-west-2a.masters.dev1.k8s.local",
            "PropagateAtLaunch": true
          },
          {
            "Key": "Purpose",
            "Value": "Dev",
            "PropagateAtLaunch": true
          },
          {
            "Key": "Team",
            "Value": "Dev",
            "PropagateAtLaunch": true
          },
          {
            "Key": "k8s.io/cluster-autoscaler/node-template/label/kops.k8s.io/instancegroup",
            "Value": "master-eu-west-2a",
            "PropagateAtLaunch": true
          },
          {
            "Key": "k8s.io/role/master",
            "Value": "1",
            "PropagateAtLaunch": true
          }
        ],
        "MetricsCollection": [
          {
            "Granularity": "1Minute",
            "Metrics": [
              "GroupDesiredCapacity",
              "GroupInServiceInstances",
              "GroupMaxSize",
              "GroupMinSize",
              "GroupPendingInstances",
              "GroupStandbyInstances",
              "GroupTerminatingInstances",
              "GroupTotalInstances"
            ]
          }
        ],
        "LoadBalancerNames": [
          {
            "Ref": "AWSElasticLoadBalancingLoadBalancerapidev1k8slocal"
          }
        ]
      }
    },
    "AWSAutoScalingAutoScalingGroupmastereuwest2bmastersdev1k8slocal": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "AutoScalingGroupName": "master-eu-west-2b.masters.dev1.k8s.local",
        "LaunchConfigurationName": {
          "Ref": "AWSAutoScalingLaunchConfigurationmastereuwest2bmastersdev1k8slocal"
        },
        "MaxSize": 1,
        "MinSize": 1,
        "VPCZoneIdentifier": [
          {
            "Ref": "AWSEC2Subneteuwest2bdev1k8slocal"
          }
        ],
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "dev1.k8s.local",
            "PropagateAtLaunch": true
          },
          {
            "Key": "Name",
            "Value": "master-eu-west-2b.masters.dev1.k8s.local",
            "PropagateAtLaunch": true
          },
          {
            "Key": "Purpose",
            "Value": "Dev",
            "PropagateAtLaunch": true
          },
          {
            "Key": "Team",
            "Value": "Dev",
            "PropagateAtLaunch": true
          },
          {
            "Key": "k8s.io/cluster-autoscaler/node-template/label/kops.k8s.io/instancegroup",
            "Value": "master-eu-west-2b",
            "PropagateAtLaunch": true
          },
          {
            "Key": "k8s.io/role/master",
            "Value": "1",
            "PropagateAtLaunch": true
          }
        ],
        "MetricsCollection": [
          {
            "Granularity": "1Minute",
            "Metrics": [
              "GroupDesiredCapacity",
              "GroupInServiceInstances",
              "GroupMaxSize",
              "GroupMinSize",
              "GroupPendingInstances",
              "GroupStandbyInstances",
              "GroupTerminatingInstances",
              "GroupTotalInstances"
            ]
          }
        ],
        "LoadBalancerNames": [
          {
            "Ref": "AWSElasticLoadBalancingLoadBalancerapidev1k8slocal"
          }
        ]
      }
    },
    "AWSAutoScalingAutoScalingGroupmastereuwest2cmastersdev1k8slocal": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "AutoScalingGroupName": "master-eu-west-2c.masters.dev1.k8s.local",
        "LaunchConfigurationName": {
          "Ref": "AWSAutoScalingLaunchConfigurationmastereuwest2cmastersdev1k8slocal"
        },
        "MaxSize": 1,
        "MinSize": 1,
        "VPCZoneIdentifier": [
          {
            "Ref": "AWSEC2Subneteuwest2cdev1k8slocal"
          }
        ],
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "dev1.k8s.local",
            "PropagateAtLaunch": true
          },
          {
            "Key": "Name",
            "Value": "master-eu-west-2c.masters.dev1.k8s.local",
            "PropagateAtLaunch": true
          },
          {
            "Key": "Purpose",
            "Value": "Dev",
            "PropagateAtLaunch": true
          },
          {
            "Key": "Team",
            "Value": "Dev",
            "PropagateAtLaunch": true
          },
          {
            "Key": "k8s.io/cluster-autoscaler/node-template/label/kops.k8s.io/instancegroup",
            "Value": "master-eu-west-2c",
            "PropagateAtLaunch": true
          },
          {
            "Key": "k8s.io/role/master",
            "Value": "1",
            "PropagateAtLaunch": true
          }
        ],
        "MetricsCollection": [
          {
            "Granularity": "1Minute",
            "Metrics": [
              "GroupDesiredCapacity",
              "GroupInServiceInstances",
              "GroupMaxSize",
              "GroupMinSize",
              "GroupPendingInstances",
              "GroupStandbyInstances",
              "GroupTerminatingInstances",
              "GroupTotalInstances"
            ]
          }
        ],
        "LoadBalancerNames": [
          {
            "Ref": "AWSElasticLoadBalancingLoadBalancerapidev1k8slocal"
          }
        ]
      }
    },
    "AWSAutoScalingAutoScalingGroupnodesdev1k8slocal": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "AutoScalingGroupName": "nodes.dev1.k8s.local",
        "LaunchConfigurationName": {
          "Ref": "AWSAutoScalingLaunchConfigurationnodesdev1k8slocal"
        },
        "MaxSize": 1,
        "MinSize": 1,
        "VPCZoneIdentifier": [
          {
            "Ref": "AWSEC2Subneteuwest2adev1k8slocal"
          },
          {
            "Ref": "AWSEC2Subneteuwest2bdev1k8slocal"
          },
          {
            "Ref": "AWSEC2Subneteuwest2cdev1k8slocal"
          }
        ],
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "dev1.k8s.local",
            "PropagateAtLaunch": true
          },
          {
            "Key": "Name",
            "Value": "nodes.dev1.k8s.local",
            "PropagateAtLaunch": true
          },
          {
            "Key": "Purpose",
            "Value": "Dev",
            "PropagateAtLaunch": true
          },
          {
            "Key": "Team",
            "Value": "Dev",
            "PropagateAtLaunch": true
          },
          {
            "Key": "k8s.io/cluster-autoscaler/node-template/label/kops.k8s.io/instancegroup",
            "Value": "nodes",
            "PropagateAtLaunch": true
          },
          {
            "Key": "k8s.io/role/node",
            "Value": "1",
            "PropagateAtLaunch": true
          }
        ],
        "MetricsCollection": [
          {
            "Granularity": "1Minute",
            "Metrics": [
              "GroupDesiredCapacity",
              "GroupInServiceInstances",
              "GroupMaxSize",
              "GroupMinSize",
              "GroupPendingInstances",
              "GroupStandbyInstances",
              "GroupTerminatingInstances",
              "GroupTotalInstances"
            ]
          }
        ]
      }
    },
    "AWSAutoScalingLaunchConfigurationmastereuwest2amastersdev1k8slocal": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "AssociatePublicIpAddress": false,
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/sda1",
            "Ebs": {
              "VolumeType": "gp2",
              "VolumeSize": 64,
              "DeleteOnTermination": true
            }
          }
        ],
        "IamInstanceProfile": {
          "Ref": "AWSIAMInstanceProfilemastersdev1k8slocal"
        },
        "ImageId": "ami-dba8bebf",
        "InstanceType": "t2.micro",
        "KeyName": "kubernetes.dev1.k8s.local-53:15:40:47:96:7f:73:b2:72:15:5c:7c:72:ce:f4:0d",
        "SecurityGroups": [
          {
            "Ref": "AWSEC2SecurityGroupmastersdev1k8slocal"
          }
        ],
        "UserData": "",
        "InstanceMonitoring": false
      }
    },
    "AWSAutoScalingLaunchConfigurationmastereuwest2bmastersdev1k8slocal": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "AssociatePublicIpAddress": false,
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/sda1",
            "Ebs": {
              "VolumeType": "gp2",
              "VolumeSize": 64,
              "DeleteOnTermination": true
            }
          }
        ],
        "IamInstanceProfile": {
          "Ref": "AWSIAMInstanceProfilemastersdev1k8slocal"
        },
        "ImageId": "ami-dba8bebf",
        "InstanceType": "t2.micro",
        "KeyName": "kubernetes.dev1.k8s.local-53:15:40:47:96:7f:73:b2:72:15:5c:7c:72:ce:f4:0d",
        "SecurityGroups": [
          {
            "Ref": "AWSEC2SecurityGroupmastersdev1k8slocal"
          }
        ],
        "UserData": "",
        "InstanceMonitoring": false
      }
    },
    "AWSAutoScalingLaunchConfigurationmastereuwest2cmastersdev1k8slocal": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "AssociatePublicIpAddress": false,
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/sda1",
            "Ebs": {
              "VolumeType": "gp2",
              "VolumeSize": 64,
              "DeleteOnTermination": true
            }
          }
        ],
        "IamInstanceProfile": {
          "Ref": "AWSIAMInstanceProfilemastersdev1k8slocal"
        },
        "ImageId": "ami-dba8bebf",
        "InstanceType": "t2.micro",
        "KeyName": "kubernetes.dev1.k8s.local-53:15:40:47:96:7f:73:b2:72:15:5c:7c:72:ce:f4:0d",
        "SecurityGroups": [
          {
            "Ref": "AWSEC2SecurityGroupmastersdev1k8slocal"
          }
        ],
        "UserData": "",
        "InstanceMonitoring": false
      }
    },
    "AWSAutoScalingLaunchConfigurationnodesdev1k8slocal": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "AssociatePublicIpAddress": false,
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/sda1",
            "Ebs": {
              "VolumeType": "gp2",
              "VolumeSize": 128,
              "DeleteOnTermination": true
            }
          }
        ],
        "IamInstanceProfile": {
          "Ref": "AWSIAMInstanceProfilenodesdev1k8slocal"
        },
        "ImageId": "ami-dba8bebf",
        "InstanceType": "t2.micro",
        "KeyName": "kubernetes.dev1.k8s.local-53:15:40:47:96:7f:73:b2:72:15:5c:7c:72:ce:f4:0d",
        "SecurityGroups": [
          {
            "Ref": "AWSEC2SecurityGroupnodesdev1k8slocal"
          }
        ],
        "UserData": "",
        "InstanceMonitoring": false
      }
    },
    "AWSEC2DHCPOptionsdev1k8slocal": {
      "Type": "AWS::EC2::DHCPOptions",
      "Properties": {
        "DomainName": "eu-west-2.compute.internal",
        "DomainNameServers": [
          "AmazonProvidedDNS"
        ],
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "dev1.k8s.local"
          },
          {
            "Key": "Name",
            "Value": "dev1.k8s.local"
          },
          {
            "Key": "kubernetes.io/cluster/dev1.k8s.local",
            "Value": "owned"
          }
        ]
      }
    },
    "AWSEC2EIPeuwest2adev1k8slocal": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "dev1.k8s.local"
          },
          {
            "Key": "Name",
            "Value": "eu-west-2a.dev1.k8s.local"
          },
          {
            "Key": "kubernetes.io/cluster/dev1.k8s.local",
            "Value": "owned"
          }
        ]
      }
    },
    "AWSEC2EIPeuwest2bdev1k8slocal": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "dev1.k8s.local"
          },
          {
            "Key": "Name",
            "Value": "eu-west-2b.dev1.k8s.local"
          },
          {
            "Key": "kubernetes.io/cluster/dev1.k8s.local",
            "Value": "owned"
          }
        ]
      }
    },
    "AWSEC2EIPeuwest2cdev1k8slocal": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "dev1.k8s.local"
          },
          {
            "Key": "Name",
            "Value": "eu-west-2c.dev1.k8s.local"
          },
          {
            "Key": "kubernetes.io/cluster/dev1.k8s.local",
            "Value": "owned"
          }
        ]
      }
    },
    "AWSEC2InternetGatewaydev1k8slocal": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "dev1.k8s.local"
          },
          {
            "Key": "Name",
            "Value": "dev1.k8s.local"
          },
          {
            "Key": "kubernetes.io/cluster/dev1.k8s.local",
            "Value": "owned"
          }
        ]
      }
    },
    "AWSEC2NatGatewayeuwest2adev1k8slocal": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "AWSEC2EIPeuwest2adev1k8slocal",
            "AllocationId"
          ]
        },
        "SubnetId": {
          "Ref": "AWSEC2Subnetutilityeuwest2adev1k8slocal"
        },
        "tags": {
          "KubernetesCluster": "dev1.k8s.local",
          "Name": "eu-west-2a.dev1.k8s.local",
          "kubernetes.io/cluster/dev1.k8s.local": "owned"
        }
      }
    },
    "AWSEC2NatGatewayeuwest2bdev1k8slocal": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "AWSEC2EIPeuwest2bdev1k8slocal",
            "AllocationId"
          ]
        },
        "SubnetId": {
          "Ref": "AWSEC2Subnetutilityeuwest2bdev1k8slocal"
        },
        "tags": {
          "KubernetesCluster": "dev1.k8s.local",
          "Name": "eu-west-2b.dev1.k8s.local",
          "kubernetes.io/cluster/dev1.k8s.local": "owned"
        }
      }
    },
    "AWSEC2NatGatewayeuwest2cdev1k8slocal": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "AWSEC2EIPeuwest2cdev1k8slocal",
            "AllocationId"
          ]
        },
        "SubnetId": {
          "Ref": "AWSEC2Subnetutilityeuwest2cdev1k8slocal"
        },
        "tags": {
          "KubernetesCluster": "dev1.k8s.local",
          "Name": "eu-west-2c.dev1.k8s.local",
          "kubernetes.io/cluster/dev1.k8s.local": "owned"
        }
      }
    },
    "AWSEC2Route00000": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "AWSEC2RouteTabledev1k8slocal"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "AWSEC2InternetGatewaydev1k8slocal"
        }
      }
    },
    "AWSEC2RouteTabledev1k8slocal": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "AWSEC2VPCdev1k8slocal"
        },
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "dev1.k8s.local"
          },
          {
            "Key": "Name",
            "Value": "dev1.k8s.local"
          },
          {
            "Key": "kubernetes.io/cluster/dev1.k8s.local",
            "Value": "owned"
          },
          {
            "Key": "kubernetes.io/kops/role",
            "Value": "public"
          }
        ]
      }
    },
    "AWSEC2RouteTableprivateeuwest2adev1k8slocal": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "AWSEC2VPCdev1k8slocal"
        },
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "dev1.k8s.local"
          },
          {
            "Key": "Name",
            "Value": "private-eu-west-2a.dev1.k8s.local"
          },
          {
            "Key": "kubernetes.io/cluster/dev1.k8s.local",
            "Value": "owned"
          },
          {
            "Key": "kubernetes.io/kops/role",
            "Value": "private-eu-west-2a"
          }
        ]
      }
    },
    "AWSEC2RouteTableprivateeuwest2bdev1k8slocal": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "AWSEC2VPCdev1k8slocal"
        },
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "dev1.k8s.local"
          },
          {
            "Key": "Name",
            "Value": "private-eu-west-2b.dev1.k8s.local"
          },
          {
            "Key": "kubernetes.io/cluster/dev1.k8s.local",
            "Value": "owned"
          },
          {
            "Key": "kubernetes.io/kops/role",
            "Value": "private-eu-west-2b"
          }
        ]
      }
    },
    "AWSEC2RouteTableprivateeuwest2cdev1k8slocal": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "AWSEC2VPCdev1k8slocal"
        },
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "dev1.k8s.local"
          },
          {
            "Key": "Name",
            "Value": "private-eu-west-2c.dev1.k8s.local"
          },
          {
            "Key": "kubernetes.io/cluster/dev1.k8s.local",
            "Value": "owned"
          },
          {
            "Key": "kubernetes.io/kops/role",
            "Value": "private-eu-west-2c"
          }
        ]
      }
    },
    "AWSEC2Routeprivateeuwest2a00000": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "AWSEC2RouteTableprivateeuwest2adev1k8slocal"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "AWSEC2NatGatewayeuwest2adev1k8slocal"
        }
      }
    },
    "AWSEC2Routeprivateeuwest2b00000": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "AWSEC2RouteTableprivateeuwest2bdev1k8slocal"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "AWSEC2NatGatewayeuwest2bdev1k8slocal"
        }
      }
    },
    "AWSEC2Routeprivateeuwest2c00000": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "AWSEC2RouteTableprivateeuwest2cdev1k8slocal"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "AWSEC2NatGatewayeuwest2cdev1k8slocal"
        }
      }
    },
    "AWSEC2SecurityGroupEgressapielbegress": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupapielbdev1k8slocal"
        },
        "FromPort": 0,
        "ToPort": 0,
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "AWSEC2SecurityGroupEgressmasteregress": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupmastersdev1k8slocal"
        },
        "FromPort": 0,
        "ToPort": 0,
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "AWSEC2SecurityGroupEgressnodeegress": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupnodesdev1k8slocal"
        },
        "FromPort": 0,
        "ToPort": 0,
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "AWSEC2SecurityGroupIngressallmastertomaster": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupmastersdev1k8slocal"
        },
        "SourceSecurityGroupId": {
          "Ref": "AWSEC2SecurityGroupmastersdev1k8slocal"
        },
        "FromPort": 0,
        "ToPort": 0,
        "IpProtocol": "-1"
      }
    },
    "AWSEC2SecurityGroupIngressallmastertonode": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupnodesdev1k8slocal"
        },
        "SourceSecurityGroupId": {
          "Ref": "AWSEC2SecurityGroupmastersdev1k8slocal"
        },
        "FromPort": 0,
        "ToPort": 0,
        "IpProtocol": "-1"
      }
    },
    "AWSEC2SecurityGroupIngressallnodetonode": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupnodesdev1k8slocal"
        },
        "SourceSecurityGroupId": {
          "Ref": "AWSEC2SecurityGroupnodesdev1k8slocal"
        },
        "FromPort": 0,
        "ToPort": 0,
        "IpProtocol": "-1"
      }
    },
    "AWSEC2SecurityGroupIngresshttpsapielb00000": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupapielbdev1k8slocal"
        },
        "FromPort": 443,
        "ToPort": 443,
        "IpProtocol": "tcp",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "AWSEC2SecurityGroupIngresshttpselbtomaster": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupmastersdev1k8slocal"
        },
        "SourceSecurityGroupId": {
          "Ref": "AWSEC2SecurityGroupapielbdev1k8slocal"
        },
        "FromPort": 443,
        "ToPort": 443,
        "IpProtocol": "tcp"
      }
    },
    "AWSEC2SecurityGroupIngressnodetomasterprotocolipip": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupmastersdev1k8slocal"
        },
        "SourceSecurityGroupId": {
          "Ref": "AWSEC2SecurityGroupnodesdev1k8slocal"
        },
        "FromPort": 0,
        "ToPort": 65535,
        "IpProtocol": "4"
      }
    },
    "AWSEC2SecurityGroupIngressnodetomastertcp12379": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupmastersdev1k8slocal"
        },
        "SourceSecurityGroupId": {
          "Ref": "AWSEC2SecurityGroupnodesdev1k8slocal"
        },
        "FromPort": 1,
        "ToPort": 2379,
        "IpProtocol": "tcp"
      }
    },
    "AWSEC2SecurityGroupIngressnodetomastertcp23824001": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupmastersdev1k8slocal"
        },
        "SourceSecurityGroupId": {
          "Ref": "AWSEC2SecurityGroupnodesdev1k8slocal"
        },
        "FromPort": 2382,
        "ToPort": 4001,
        "IpProtocol": "tcp"
      }
    },
    "AWSEC2SecurityGroupIngressnodetomastertcp400365535": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupmastersdev1k8slocal"
        },
        "SourceSecurityGroupId": {
          "Ref": "AWSEC2SecurityGroupnodesdev1k8slocal"
        },
        "FromPort": 4003,
        "ToPort": 65535,
        "IpProtocol": "tcp"
      }
    },
    "AWSEC2SecurityGroupIngressnodetomasterudp165535": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupmastersdev1k8slocal"
        },
        "SourceSecurityGroupId": {
          "Ref": "AWSEC2SecurityGroupnodesdev1k8slocal"
        },
        "FromPort": 1,
        "ToPort": 65535,
        "IpProtocol": "udp"
      }
    },
    "AWSEC2SecurityGroupIngresssshexternaltomaster00000": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupmastersdev1k8slocal"
        },
        "FromPort": 22,
        "ToPort": 22,
        "IpProtocol": "tcp",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "AWSEC2SecurityGroupIngresssshexternaltonode00000": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupnodesdev1k8slocal"
        },
        "FromPort": 22,
        "ToPort": 22,
        "IpProtocol": "tcp",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "AWSEC2SecurityGroupapielbdev1k8slocal": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": {
          "Ref": "AWSEC2VPCdev1k8slocal"
        },
        "GroupDescription": "Security group for api ELB",
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "dev1.k8s.local"
          },
          {
            "Key": "Name",
            "Value": "api-elb.dev1.k8s.local"
          },
          {
            "Key": "kubernetes.io/cluster/dev1.k8s.local",
            "Value": "owned"
          }
        ]
      }
    },
    "AWSEC2SecurityGroupmastersdev1k8slocal": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": {
          "Ref": "AWSEC2VPCdev1k8slocal"
        },
        "GroupDescription": "Security group for masters",
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "dev1.k8s.local"
          },
          {
            "Key": "Name",
            "Value": "masters.dev1.k8s.local"
          },
          {
            "Key": "kubernetes.io/cluster/dev1.k8s.local",
            "Value": "owned"
          }
        ]
      }
    },
    "AWSEC2SecurityGroupnodesdev1k8slocal": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": {
          "Ref": "AWSEC2VPCdev1k8slocal"
        },
        "GroupDescription": "Security group for nodes",
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "dev1.k8s.local"
          },
          {
            "Key": "Name",
            "Value": "nodes.dev1.k8s.local"
          },
          {
            "Key": "kubernetes.io/cluster/dev1.k8s.local",
            "Value": "owned"
          }
        ]
      }
    },
    "AWSEC2SubnetRouteTableAssociationprivateeuwest2adev1k8slocal": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "AWSEC2Subneteuwest2adev1k8slocal"
        },
        "RouteTableId": {
          "Ref": "AWSEC2RouteTableprivateeuwest2adev1k8slocal"
        }
      }
    },
    "AWSEC2SubnetRouteTableAssociationprivateeuwest2bdev1k8slocal": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "AWSEC2Subneteuwest2bdev1k8slocal"
        },
        "RouteTableId": {
          "Ref": "AWSEC2RouteTableprivateeuwest2bdev1k8slocal"
        }
      }
    },
    "AWSEC2SubnetRouteTableAssociationprivateeuwest2cdev1k8slocal": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "AWSEC2Subneteuwest2cdev1k8slocal"
        },
        "RouteTableId": {
          "Ref": "AWSEC2RouteTableprivateeuwest2cdev1k8slocal"
        }
      }
    },
    "AWSEC2SubnetRouteTableAssociationutilityeuwest2adev1k8slocal": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "AWSEC2Subnetutilityeuwest2adev1k8slocal"
        },
        "RouteTableId": {
          "Ref": "AWSEC2RouteTabledev1k8slocal"
        }
      }
    },
    "AWSEC2SubnetRouteTableAssociationutilityeuwest2bdev1k8slocal": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "AWSEC2Subnetutilityeuwest2bdev1k8slocal"
        },
        "RouteTableId": {
          "Ref": "AWSEC2RouteTabledev1k8slocal"
        }
      }
    },
    "AWSEC2SubnetRouteTableAssociationutilityeuwest2cdev1k8slocal": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "AWSEC2Subnetutilityeuwest2cdev1k8slocal"
        },
        "RouteTableId": {
          "Ref": "AWSEC2RouteTabledev1k8slocal"
        }
      }
    },
    "AWSEC2Subneteuwest2adev1k8slocal": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "AWSEC2VPCdev1k8slocal"
        },
        "CidrBlock": "172.20.32.0/19",
        "AvailabilityZone": "eu-west-2a",
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "dev1.k8s.local"
          },
          {
            "Key": "Name",
            "Value": "eu-west-2a.dev1.k8s.local"
          },
          {
            "Key": "SubnetType",
            "Value": "Private"
          },
          {
            "Key": "kubernetes.io/cluster/dev1.k8s.local",
            "Value": "owned"
          },
          {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1"
          }
        ]
      }
    },
    "AWSEC2Subneteuwest2bdev1k8slocal": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "AWSEC2VPCdev1k8slocal"
        },
        "CidrBlock": "172.20.64.0/19",
        "AvailabilityZone": "eu-west-2b",
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "dev1.k8s.local"
          },
          {
            "Key": "Name",
            "Value": "eu-west-2b.dev1.k8s.local"
          },
          {
            "Key": "SubnetType",
            "Value": "Private"
          },
          {
            "Key": "kubernetes.io/cluster/dev1.k8s.local",
            "Value": "owned"
          },
          {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1"
          }
        ]
      }
    },
    "AWSEC2Subneteuwest2cdev1k8slocal": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "AWSEC2VPCdev1k8slocal"
        },
        "CidrBlock": "172.20.96.0/19",
        "AvailabilityZone": "eu-west-2c",
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "dev1.k8s.local"
          },
          {
            "Key": "Name",
            "Value": "eu-west-2c.dev1.k8s.local"
          },
          {
            "Key": "SubnetType",
            "Value": "Private"
          },
          {
            "Key": "kubernetes.io/cluster/dev1.k8s.local",
            "Value": "owned"
          },
          {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1"
          }
        ]
      }
    },
    "AWSEC2Subnetutilityeuwest2adev1k8slocal": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "AWSEC2VPCdev1k8slocal"
        },
        "CidrBlock": "172.20.0.0/22",
        "AvailabilityZone": "eu-west-2a",
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "dev1.k8s.local"
          },
          {
            "Key": "Name",
            "Value": "utility-eu-west-2a.dev1.k8s.local"
          },
          {
            "Key": "SubnetType",
            "Value": "Utility"
          },
          {
            "Key": "kubernetes.io/cluster/dev1.k8s.local",
            "Value": "owned"
          },
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1"
          }
        ]
      }
    },
    "AWSEC2Subnetutilityeuwest2bdev1k8slocal": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "AWSEC2VPCdev1k8slocal"
        },
        "CidrBlock": "172.20.4.0/22",
        "AvailabilityZone": "eu-west-2b",
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "dev1.k8s.local"
          },
          {
            "Key": "Name",
            "Value": "utility-eu-west-2b.dev1.k8s.local"
          },
          {
            "Key": "SubnetType",
            "Value": "Utility"
          },
          {
            "Key": "kubernetes.io/cluster/dev1.k8s.local",
            "Value": "owned"
          },
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1"
          }
        ]
      }
    },
    "AWSEC2Subnetutilityeuwest2cdev1k8slocal": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "AWSEC2VPCdev1k8slocal"
        },
        "CidrBlock": "172.20.8.0/22",
        "AvailabilityZone": "eu-west-2c",
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "dev1.k8s.local"
          },
          {
            "Key": "Name",
            "Value": "utility-eu-west-2c.dev1.k8s.local"
          },
          {
            "Key": "SubnetType",
            "Value": "Utility"
          },
          {
            "Key": "kubernetes.io/cluster/dev1.k8s.local",
            "Value": "owned"
          },
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1"
          }
        ]
      }
    },
    "AWSEC2VPCDHCPOptionsAssociationdev1k8slocal": {
      "Type": "AWS::EC2::VPCDHCPOptionsAssociation",
      "Properties": {
        "VpcId": {
          "Ref": "AWSEC2VPCdev1k8slocal"
        },
        "DhcpOptionsId": {
          "Ref": "AWSEC2DHCPOptionsdev1k8slocal"
        }
      }
    },
    "AWSEC2VPCGatewayAttachmentdev1k8slocal": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "AWSEC2VPCdev1k8slocal"
        },
        "InternetGatewayId": {
          "Ref": "AWSEC2InternetGatewaydev1k8slocal"
        }
      }
    },
    "AWSEC2VPCdev1k8slocal": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "172.20.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "dev1.k8s.local"
          },
          {
            "Key": "Name",
            "Value": "dev1.k8s.local"
          },
          {
            "Key": "kubernetes.io/cluster/dev1.k8s.local",
            "Value": "owned"
          }
        ]
      }
    },
    "AWSEC2Volumeaetcdeventsdev1k8slocal": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "eu-west-2a",
        "Size": 20,
        "VolumeType": "gp2",
        "Encrypted": true,
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "dev1.k8s.local"
          },
          {
            "Key": "Name",
            "Value": "a.etcd-events.dev1.k8s.local"
          },
          {
            "Key": "Purpose",
            "Value": "Dev"
          },
          {
            "Key": "Team",
            "Value": "Dev"
          },
          {
            "Key": "k8s.io/etcd/events",
            "Value": "a/a,b,c"
          },
          {
            "Key": "k8s.io/role/master",
            "Value": "1"
          },
          {
            "Key": "kubernetes.io/cluster/dev1.k8s.local",
            "Value": "owned"
          }
        ]
      }
    },
    "AWSEC2Volumeaetcdmaindev1k8slocal": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "eu-west-2a",
        "Size": 20,
        "VolumeType": "gp2",
        "Encrypted": true,
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "dev1.k8s.local"
          },
          {
            "Key": "Name",
            "Value": "a.etcd-main.dev1.k8s.local"
          },
          {
            "Key": "Purpose",
            "Value": "Dev"
          },
          {
            "Key": "Team",
            "Value": "Dev"
          },
          {
            "Key": "k8s.io/etcd/main",
            "Value": "a/a,b,c"
          },
          {
            "Key": "k8s.io/role/master",
            "Value": "1"
          },
          {
            "Key": "kubernetes.io/cluster/dev1.k8s.local",
            "Value": "owned"
          }
        ]
      }
    },
    "AWSEC2Volumebetcdeventsdev1k8slocal": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "eu-west-2b",
        "Size": 20,
        "VolumeType": "gp2",
        "Encrypted": true,
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "dev1.k8s.local"
          },
          {
            "Key": "Name",
            "Value": "b.etcd-events.dev1.k8s.local"
          },
          {
            "Key": "Purpose",
            "Value": "Dev"
          },
          {
            "Key": "Team",
            "Value": "Dev"
          },
          {
            "Key": "k8s.io/etcd/events",
            "Value": "b/a,b,c"
          },
          {
            "Key": "k8s.io/role/master",
            "Value": "1"
          },
          {
            "Key": "kubernetes.io/cluster/dev1.k8s.local",
            "Value": "owned"
          }
        ]
      }
    },
    "AWSEC2Volumebetcdmaindev1k8slocal": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "eu-west-2b",
        "Size": 20,
        "VolumeType": "gp2",
        "Encrypted": true,
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "dev1.k8s.local"
          },
          {
            "Key": "Name",
            "Value": "b.etcd-main.dev1.k8s.local"
          },
          {
            "Key": "Purpose",
            "Value": "Dev"
          },
          {
            "Key": "Team",
            "Value": "Dev"
          },
          {
            "Key": "k8s.io/etcd/main",
            "Value": "b/a,b,c"
          },
          {
            "Key": "k8s.io/role/master",
            "Value": "1"
          },
          {
            "Key": "kubernetes.io/cluster/dev1.k8s.local",
            "Value": "owned"
          }
        ]
      }
    },
    "AWSEC2Volumecetcdeventsdev1k8slocal": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "eu-west-2c",
        "Size": 20,
        "VolumeType": "gp2",
        "Encrypted": true,
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "dev1.k8s.local"
          },
          {
            "Key": "Name",
            "Value": "c.etcd-events.dev1.k8s.local"
          },
          {
            "Key": "Purpose",
            "Value": "Dev"
          },
          {
            "Key": "Team",
            "Value": "Dev"
          },
          {
            "Key": "k8s.io/etcd/events",
            "Value": "c/a,b,c"
          },
          {
            "Key": "k8s.io/role/master",
            "Value": "1"
          },
          {
            "Key": "kubernetes.io/cluster/dev1.k8s.local",
            "Value": "owned"
          }
        ]
      }
    },
    "AWSEC2Volumecetcdmaindev1k8slocal": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "eu-west-2c",
        "Size": 20,
        "VolumeType": "gp2",
        "Encrypted": true,
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "dev1.k8s.local"
          },
          {
            "Key": "Name",
            "Value": "c.etcd-main.dev1.k8s.local"
          },
          {
            "Key": "Purpose",
            "Value": "Dev"
          },
          {
            "Key": "Team",
            "Value": "Dev"
          },
          {
            "Key": "k8s.io/etcd/main",
            "Value": "c/a,b,c"
          },
          {
            "Key": "k8s.io/role/master",
            "Value": "1"
          },
          {
            "Key": "kubernetes.io/cluster/dev1.k8s.local",
            "Value": "owned"
          }
        ]
      }
    },
    "AWSElasticLoadBalancingLoadBalancerapidev1k8slocal": {
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties": {
        "LoadBalancerName": "api-dev1-k8s-local-46oand",
        "Listeners": [
          {
            "InstancePort": 443,
            "InstanceProtocol": "TCP",
            "LoadBalancerPort": 443,
            "Protocol": "TCP"
          }
        ],
        "SecurityGroups": [
          {
            "Ref": "AWSEC2SecurityGroupapielbdev1k8slocal"
          }
        ],
        "Subnets": [
          {
            "Ref": "AWSEC2Subneteuwest2adev1k8slocal"
          },
          {
            "Ref": "AWSEC2Subneteuwest2bdev1k8slocal"
          },
          {
            "Ref": "AWSEC2Subneteuwest2cdev1k8slocal"
          }
        ],
        "Scheme": "internal",
        "HealthCheck": {
          "Target": "SSL:443",
          "HealthyThreshold": 2,
          "UnhealthyThreshold": 2,
          "Interval": 10,
          "Timeout": 5
        },
        "ConnectionSettings": {
          "IdleTimeout": 300
        },
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "dev1.k8s.local"
          },
          {
            "Key": "Name",
            "Value": "api.dev1.k8s.local"
          }
        ]
      }
    },
    "AWSIAMInstanceProfilemastersdev1k8slocal": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Roles": [
          {
            "Ref": "AWSIAMRolemastersdev1k8slocal"
          }
        ]
      }
    },
    "AWSIAMInstanceProfilenodesdev1k8slocal": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Roles": [
          {
            "Ref": "AWSIAMRolenodesdev1k8slocal"
          }
        ]
      }
    },
    "AWSIAMPolicymastersdev1k8slocal": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "masters.dev1.k8s.local",
        "Roles": [
          {
            "Ref": "AWSIAMRolemastersdev1k8slocal"
          }
        ],
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ec2:DescribeInstances",
                "ec2:DescribeRegions",
                "ec2:DescribeRouteTables",
                "ec2:DescribeSecurityGroups",
                "ec2:DescribeSubnets",
                "ec2:DescribeVolumes"
              ],
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            },
            {
              "Action": [
                "ec2:CreateSecurityGroup",
                "ec2:CreateTags",
                "ec2:CreateVolume",
                "ec2:DescribeVolumesModifications",
                "ec2:ModifyInstanceAttribute",
                "ec2:ModifyVolume"
              ],
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            },
            {
              "Action": [
                "ec2:AttachVolume",
                "ec2:AuthorizeSecurityGroupIngress",
                "ec2:CreateRoute",
                "ec2:DeleteRoute",
                "ec2:DeleteSecurityGroup",
                "ec2:DeleteVolume",
                "ec2:DetachVolume",
                "ec2:RevokeSecurityGroupIngress"
              ],
              "Condition": {
                "StringEquals": {
                  "ec2:ResourceTag/KubernetesCluster": "dev1.k8s.local"
                }
              },
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            },
            {
              "Action": [
                "autoscaling:DescribeAutoScalingGroups",
                "autoscaling:DescribeLaunchConfigurations",
                "autoscaling:DescribeTags"
              ],
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            },
            {
              "Action": [
                "autoscaling:SetDesiredCapacity",
                "autoscaling:TerminateInstanceInAutoScalingGroup",
                "autoscaling:UpdateAutoScalingGroup"
              ],
              "Condition": {
                "StringEquals": {
                  "autoscaling:ResourceTag/KubernetesCluster": "dev1.k8s.local"
                }
              },
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            },
            {
              "Action": [
                "elasticloadbalancing:AddTags",
                "elasticloadbalancing:AttachLoadBalancerToSubnets",
                "elasticloadbalancing:ApplySecurityGroupsToLoadBalancer",
                "elasticloadbalancing:CreateLoadBalancer",
                "elasticloadbalancing:CreateLoadBalancerPolicy",
                "elasticloadbalancing:CreateLoadBalancerListeners",
                "elasticloadbalancing:ConfigureHealthCheck",
                "elasticloadbalancing:DeleteLoadBalancer",
                "elasticloadbalancing:DeleteLoadBalancerListeners",
                "elasticloadbalancing:DescribeLoadBalancers",
                "elasticloadbalancing:DescribeLoadBalancerAttributes",
                "elasticloadbalancing:DetachLoadBalancerFromSubnets",
                "elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
                "elasticloadbalancing:ModifyLoadBalancerAttributes",
                "elasticloadbalancing:RegisterInstancesWithLoadBalancer",
                "elasticloadbalancing:SetLoadBalancerPoliciesForBackendServer"
              ],
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            },
            {
              "Action": [
                "ec2:DescribeVpcs",
                "elasticloadbalancing:AddTags",
                "elasticloadbalancing:CreateListener",
                "elasticloadbalancing:CreateTargetGroup",
                "elasticloadbalancing:DeleteListener",
                "elasticloadbalancing:DeleteTargetGroup",
                "elasticloadbalancing:DeregisterTargets",
                "elasticloadbalancing:DescribeListeners",
                "elasticloadbalancing:DescribeLoadBalancerPolicies",
                "elasticloadbalancing:DescribeTargetGroups",
                "elasticloadbalancing:DescribeTargetHealth",
                "elasticloadbalancing:ModifyListener",
                "elasticloadbalancing:ModifyTargetGroup",
                "elasticloadbalancing:RegisterTargets",
                "elasticloadbalancing:SetLoadBalancerPoliciesOfListener"
              ],
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            },
            {
              "Action": [
                "iam:ListServerCertificates",
                "iam:GetServerCertificate"
              ],
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            },
            {
              "Action": [
                "s3:GetBucketLocation",
                "s3:ListBucket"
              ],
              "Effect": "Allow",
              "Resource": [
                "arn:aws:s3:::dev-ngcloud-bucket"
              ]
            },
            {
              "Action": [
                "s3:Get*"
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:s3:::dev-ngcloud-bucket/dev1.k8s.local/*"
            },
            {
              "Action": [
                "s3:GetObject",
                "s3:DeleteObject",
                "s3:PutObject"
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:s3:::dev-ngcloud-bucket/dev1.k8s.local/backups/etcd/main/*"
            },
            {
              "Action": [
                "s3:GetObject",
                "s3:DeleteObject",
                "s3:PutObject"
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:s3:::dev-ngcloud-bucket/dev1.k8s.local/backups/etcd/events/*"
            },
            {
              "Action": [
                "ecr:GetAuthorizationToken",
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:GetRepositoryPolicy",
                "ecr:DescribeRepositories",
                "ecr:ListImages",
                "ecr:BatchGetImage"
              ],
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      }
    },
    "AWSIAMPolicynodesdev1k8slocal": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "nodes.dev1.k8s.local",
        "Roles": [
          {
            "Ref": "AWSIAMRolenodesdev1k8slocal"
          }
        ],
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ec2:DescribeInstances",
                "ec2:DescribeRegions"
              ],
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            },
            {
              "Action": [
                "s3:GetBucketLocation",
                "s3:ListBucket"
              ],
              "Effect": "Allow",
              "Resource": [
                "arn:aws:s3:::dev-ngcloud-bucket"
              ]
            },
            {
              "Action": [
                "s3:Get*"
              ],
              "Effect": "Allow",
              "Resource": [
                "arn:aws:s3:::dev-ngcloud-bucket/dev1.k8s.local/addons/*",
                "arn:aws:s3:::dev-ngcloud-bucket/dev1.k8s.local/cluster.spec",
                "arn:aws:s3:::dev-ngcloud-bucket/dev1.k8s.local/config",
                "arn:aws:s3:::dev-ngcloud-bucket/dev1.k8s.local/instancegroup/*",
                "arn:aws:s3:::dev-ngcloud-bucket/dev1.k8s.local/pki/issued/*",
                "arn:aws:s3:::dev-ngcloud-bucket/dev1.k8s.local/pki/private/kube-proxy/*",
                "arn:aws:s3:::dev-ngcloud-bucket/dev1.k8s.local/pki/private/kubelet/*",
                "arn:aws:s3:::dev-ngcloud-bucket/dev1.k8s.local/pki/ssh/*",
                "arn:aws:s3:::dev-ngcloud-bucket/dev1.k8s.local/secrets/dockerconfig"
              ]
            },
            {
              "Action": [
                "s3:Get*"
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:s3:::dev-ngcloud-bucket/dev1.k8s.local/pki/private/calico-client/*"
            },
            {
              "Action": [
                "ecr:GetAuthorizationToken",
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:GetRepositoryPolicy",
                "ecr:DescribeRepositories",
                "ecr:ListImages",
                "ecr:BatchGetImage"
              ],
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      }
    },
    "AWSIAMRolemastersdev1k8slocal": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": "masters.dev1.k8s.local",
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      }
    },
    "AWSIAMRolenodesdev1k8slocal": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": "nodes.dev1.k8s.local",
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      }
    }
  }
}