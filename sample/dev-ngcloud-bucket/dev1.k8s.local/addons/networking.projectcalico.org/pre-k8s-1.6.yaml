apiVersion: v1
data:
  calico_backend: bird
  cni_network_config: |-
    {
        "name": "k8s-pod-network",
        "type": "calico",
        "etcd_endpoints": "__ETCD_ENDPOINTS__",
        "log_level": "info",
        "ipam": {
            "type": "calico-ipam"
        },
        "policy": {
            "type": "k8s",
             "k8s_api_root": "https://__KUBERNETES_SERVICE_HOST__:__KUBERNETES_SERVICE_PORT__",
             "k8s_auth_token": "__SERVICEACCOUNT_TOKEN__"
        },
        "kubernetes": {
            "kubeconfig": "/etc/cni/net.d/__KUBECONFIG_FILENAME__"
        }
    }
  etcd_endpoints: http://etcd-a.internal.dev1.k8s.local:4001,http://etcd-b.internal.dev1.k8s.local:4001,http://etcd-c.internal.dev1.k8s.local:4001
kind: ConfigMap
metadata:
  name: calico-config
  namespace: kube-system

---

apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  labels:
    k8s-app: calico-node
    role.kubernetes.io/networking: "1"
  name: calico-node
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: calico-node
  template:
    metadata:
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ""
        scheduler.alpha.kubernetes.io/tolerations: |
          [{"key": "dedicated", "value": "master", "effect": "NoSchedule" },
           {"key":"CriticalAddonsOnly", "operator":"Exists"}]
      labels:
        k8s-app: calico-node
        role.kubernetes.io/networking: "1"
    spec:
      containers:
      - env:
        - name: ETCD_ENDPOINTS
          valueFrom:
            configMapKeyRef:
              key: etcd_endpoints
              name: calico-config
        - name: CALICO_NETWORKING_BACKEND
          valueFrom:
            configMapKeyRef:
              key: calico_backend
              name: calico-config
        - name: CLUSTER_TYPE
          value: kops,bgp
        - name: CALICO_DISABLE_FILE_LOGGING
          value: "true"
        - name: CALICO_IPV4POOL_CIDR
          value: 100.96.0.0/11
        - name: CALICO_IPV4POOL_IPIP
          value: always
        - name: IP
          value: ""
        - name: FELIX_PROMETHEUSMETRICSENABLED
          value: "false"
        - name: FELIX_PROMETHEUSMETRICSPORT
          value: "9091"
        - name: FELIX_PROMETHEUSGOMETRICSENABLED
          value: "true"
        - name: FELIX_PROMETHEUSPROCESSMETRICSENABLED
          value: "true"
        image: quay.io/calico/node:v2.4.0
        name: calico-node
        resources:
          requests:
            cpu: 10m
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /var/run/calico
          name: var-run-calico
          readOnly: false
      - command:
        - /install-cni.sh
        env:
        - name: ETCD_ENDPOINTS
          valueFrom:
            configMapKeyRef:
              key: etcd_endpoints
              name: calico-config
        - name: CNI_NETWORK_CONFIG
          valueFrom:
            configMapKeyRef:
              key: cni_network_config
              name: calico-config
        image: quay.io/calico/cni:v1.10.0
        imagePullPolicy: Always
        name: install-cni
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-bin-dir
        - mountPath: /host/etc/cni/net.d
          name: cni-net-dir
      hostNetwork: true
      volumes:
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /var/run/calico
        name: var-run-calico
      - hostPath:
          path: /opt/cni/bin
        name: cni-bin-dir
      - hostPath:
          path: /etc/cni/net.d
        name: cni-net-dir

---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    k8s-app: calico-policy
    role.kubernetes.io/networking: "1"
  name: calico-policy-controller
  namespace: kube-system
spec:
  replicas: 1
  template:
    metadata:
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ""
        scheduler.alpha.kubernetes.io/tolerations: |
          [{"key": "dedicated", "value": "master", "effect": "NoSchedule" },
           {"key":"CriticalAddonsOnly", "operator":"Exists"}]
      labels:
        k8s-app: calico-policy-controller
        role.kubernetes.io/networking: "1"
      name: calico-policy-controller
      namespace: kube-system
    spec:
      containers:
      - env:
        - name: ETCD_ENDPOINTS
          valueFrom:
            configMapKeyRef:
              key: etcd_endpoints
              name: calico-config
        - name: K8S_API
          value: https://kubernetes.default:443
        - name: CONFIGURE_ETC_HOSTS
          value: "true"
        image: quay.io/calico/kube-policy-controller:v0.7.0
        name: calico-policy-controller
        resources:
          requests:
            cpu: 10m
      hostNetwork: true
